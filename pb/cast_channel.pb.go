// Code generated by protoc-gen-go.
// source: cast_channel.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	cast_channel.proto

It has these top-level messages:
	CastMessage
	AuthChallenge
	AuthResponse
	AuthError
	DeviceAuthMessage
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type SignatureAlgorithm int32

const (
	SignatureAlgorithm_UNSPECIFIED     SignatureAlgorithm = 0
	SignatureAlgorithm_RSASSA_PKCS1v15 SignatureAlgorithm = 1
	SignatureAlgorithm_RSASSA_PSS      SignatureAlgorithm = 2
)

var SignatureAlgorithm_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "RSASSA_PKCS1v15",
	2: "RSASSA_PSS",
}
var SignatureAlgorithm_value = map[string]int32{
	"UNSPECIFIED":     0,
	"RSASSA_PKCS1v15": 1,
	"RSASSA_PSS":      2,
}

func (x SignatureAlgorithm) Enum() *SignatureAlgorithm {
	p := new(SignatureAlgorithm)
	*p = x
	return p
}
func (x SignatureAlgorithm) String() string {
	return proto.EnumName(SignatureAlgorithm_name, int32(x))
}
func (x *SignatureAlgorithm) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SignatureAlgorithm_value, data, "SignatureAlgorithm")
	if err != nil {
		return err
	}
	*x = SignatureAlgorithm(value)
	return nil
}
func (SignatureAlgorithm) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Always pass a version of the protocol for future compatibility
// requirements.
type CastMessage_ProtocolVersion int32

const (
	CastMessage_CASTV2_1_0 CastMessage_ProtocolVersion = 0
)

var CastMessage_ProtocolVersion_name = map[int32]string{
	0: "CASTV2_1_0",
}
var CastMessage_ProtocolVersion_value = map[string]int32{
	"CASTV2_1_0": 0,
}

func (x CastMessage_ProtocolVersion) Enum() *CastMessage_ProtocolVersion {
	p := new(CastMessage_ProtocolVersion)
	*p = x
	return p
}
func (x CastMessage_ProtocolVersion) String() string {
	return proto.EnumName(CastMessage_ProtocolVersion_name, int32(x))
}
func (x *CastMessage_ProtocolVersion) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CastMessage_ProtocolVersion_value, data, "CastMessage_ProtocolVersion")
	if err != nil {
		return err
	}
	*x = CastMessage_ProtocolVersion(value)
	return nil
}
func (CastMessage_ProtocolVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

// What type of data do we have in this message.
type CastMessage_PayloadType int32

const (
	CastMessage_STRING CastMessage_PayloadType = 0
	CastMessage_BINARY CastMessage_PayloadType = 1
)

var CastMessage_PayloadType_name = map[int32]string{
	0: "STRING",
	1: "BINARY",
}
var CastMessage_PayloadType_value = map[string]int32{
	"STRING": 0,
	"BINARY": 1,
}

func (x CastMessage_PayloadType) Enum() *CastMessage_PayloadType {
	p := new(CastMessage_PayloadType)
	*p = x
	return p
}
func (x CastMessage_PayloadType) String() string {
	return proto.EnumName(CastMessage_PayloadType_name, int32(x))
}
func (x *CastMessage_PayloadType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CastMessage_PayloadType_value, data, "CastMessage_PayloadType")
	if err != nil {
		return err
	}
	*x = CastMessage_PayloadType(value)
	return nil
}
func (CastMessage_PayloadType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type AuthError_ErrorType int32

const (
	AuthError_INTERNAL_ERROR                  AuthError_ErrorType = 0
	AuthError_NO_TLS                          AuthError_ErrorType = 1
	AuthError_SIGNATURE_ALGORITHM_UNAVAILABLE AuthError_ErrorType = 2
)

var AuthError_ErrorType_name = map[int32]string{
	0: "INTERNAL_ERROR",
	1: "NO_TLS",
	2: "SIGNATURE_ALGORITHM_UNAVAILABLE",
}
var AuthError_ErrorType_value = map[string]int32{
	"INTERNAL_ERROR": 0,
	"NO_TLS":         1,
	"SIGNATURE_ALGORITHM_UNAVAILABLE": 2,
}

func (x AuthError_ErrorType) Enum() *AuthError_ErrorType {
	p := new(AuthError_ErrorType)
	*p = x
	return p
}
func (x AuthError_ErrorType) String() string {
	return proto.EnumName(AuthError_ErrorType_name, int32(x))
}
func (x *AuthError_ErrorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AuthError_ErrorType_value, data, "AuthError_ErrorType")
	if err != nil {
		return err
	}
	*x = AuthError_ErrorType(value)
	return nil
}
func (AuthError_ErrorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type CastMessage struct {
	ProtocolVersion *CastMessage_ProtocolVersion `protobuf:"varint,1,req,name=protocol_version,enum=extensions.api.cast_channel.CastMessage_ProtocolVersion" json:"protocol_version,omitempty"`
	// source and destination ids identify the origin and destination of the
	// message.  They are used to route messages between endpoints that share a
	// device-to-device channel.
	//
	// For messages between applications:
	//   - The sender application id is a unique identifier generated on behalf of
	//     the sender application.
	//   - The receiver id is always the the session id for the application.
	//
	// For messages to or from the sender or receiver platform, the special ids
	// 'sender-0' and 'receiver-0' can be used.
	//
	// For messages intended for all endpoints using a given channel, the
	// wildcard destination_id '*' can be used.
	SourceId      *string `protobuf:"bytes,2,req,name=source_id" json:"source_id,omitempty"`
	DestinationId *string `protobuf:"bytes,3,req,name=destination_id" json:"destination_id,omitempty"`
	// This is the core multiplexing key.  All messages are sent on a namespace
	// and endpoints sharing a channel listen on one or more namespaces.  The
	// namespace defines the protocol and semantics of the message.
	Namespace   *string                  `protobuf:"bytes,4,req,name=namespace" json:"namespace,omitempty"`
	PayloadType *CastMessage_PayloadType `protobuf:"varint,5,req,name=payload_type,enum=extensions.api.cast_channel.CastMessage_PayloadType" json:"payload_type,omitempty"`
	// Depending on payload_type, exactly one of the following optional fields
	// will always be set.
	PayloadUtf8      *string `protobuf:"bytes,6,opt,name=payload_utf8" json:"payload_utf8,omitempty"`
	PayloadBinary    []byte  `protobuf:"bytes,7,opt,name=payload_binary" json:"payload_binary,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CastMessage) Reset()                    { *m = CastMessage{} }
func (m *CastMessage) String() string            { return proto.CompactTextString(m) }
func (*CastMessage) ProtoMessage()               {}
func (*CastMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CastMessage) GetProtocolVersion() CastMessage_ProtocolVersion {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return CastMessage_CASTV2_1_0
}

func (m *CastMessage) GetSourceId() string {
	if m != nil && m.SourceId != nil {
		return *m.SourceId
	}
	return ""
}

func (m *CastMessage) GetDestinationId() string {
	if m != nil && m.DestinationId != nil {
		return *m.DestinationId
	}
	return ""
}

func (m *CastMessage) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *CastMessage) GetPayloadType() CastMessage_PayloadType {
	if m != nil && m.PayloadType != nil {
		return *m.PayloadType
	}
	return CastMessage_STRING
}

func (m *CastMessage) GetPayloadUtf8() string {
	if m != nil && m.PayloadUtf8 != nil {
		return *m.PayloadUtf8
	}
	return ""
}

func (m *CastMessage) GetPayloadBinary() []byte {
	if m != nil {
		return m.PayloadBinary
	}
	return nil
}

// Messages for authentication protocol between a sender and a receiver.
type AuthChallenge struct {
	SignatureAlgorithm *SignatureAlgorithm `protobuf:"varint,1,opt,name=signature_algorithm,enum=extensions.api.cast_channel.SignatureAlgorithm,def=1" json:"signature_algorithm,omitempty"`
	XXX_unrecognized   []byte              `json:"-"`
}

func (m *AuthChallenge) Reset()                    { *m = AuthChallenge{} }
func (m *AuthChallenge) String() string            { return proto.CompactTextString(m) }
func (*AuthChallenge) ProtoMessage()               {}
func (*AuthChallenge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

const Default_AuthChallenge_SignatureAlgorithm SignatureAlgorithm = SignatureAlgorithm_RSASSA_PKCS1v15

func (m *AuthChallenge) GetSignatureAlgorithm() SignatureAlgorithm {
	if m != nil && m.SignatureAlgorithm != nil {
		return *m.SignatureAlgorithm
	}
	return Default_AuthChallenge_SignatureAlgorithm
}

type AuthResponse struct {
	Signature               []byte              `protobuf:"bytes,1,req,name=signature" json:"signature,omitempty"`
	ClientAuthCertificate   []byte              `protobuf:"bytes,2,req,name=client_auth_certificate" json:"client_auth_certificate,omitempty"`
	IntermediateCertificate [][]byte            `protobuf:"bytes,3,rep,name=intermediate_certificate" json:"intermediate_certificate,omitempty"`
	SignatureAlgorithm      *SignatureAlgorithm `protobuf:"varint,4,opt,name=signature_algorithm,enum=extensions.api.cast_channel.SignatureAlgorithm,def=1" json:"signature_algorithm,omitempty"`
	XXX_unrecognized        []byte              `json:"-"`
}

func (m *AuthResponse) Reset()                    { *m = AuthResponse{} }
func (m *AuthResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()               {}
func (*AuthResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

const Default_AuthResponse_SignatureAlgorithm SignatureAlgorithm = SignatureAlgorithm_RSASSA_PKCS1v15

func (m *AuthResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *AuthResponse) GetClientAuthCertificate() []byte {
	if m != nil {
		return m.ClientAuthCertificate
	}
	return nil
}

func (m *AuthResponse) GetIntermediateCertificate() [][]byte {
	if m != nil {
		return m.IntermediateCertificate
	}
	return nil
}

func (m *AuthResponse) GetSignatureAlgorithm() SignatureAlgorithm {
	if m != nil && m.SignatureAlgorithm != nil {
		return *m.SignatureAlgorithm
	}
	return Default_AuthResponse_SignatureAlgorithm
}

type AuthError struct {
	ErrorType        *AuthError_ErrorType `protobuf:"varint,1,req,name=error_type,enum=extensions.api.cast_channel.AuthError_ErrorType" json:"error_type,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *AuthError) Reset()                    { *m = AuthError{} }
func (m *AuthError) String() string            { return proto.CompactTextString(m) }
func (*AuthError) ProtoMessage()               {}
func (*AuthError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AuthError) GetErrorType() AuthError_ErrorType {
	if m != nil && m.ErrorType != nil {
		return *m.ErrorType
	}
	return AuthError_INTERNAL_ERROR
}

type DeviceAuthMessage struct {
	// Request fields
	Challenge *AuthChallenge `protobuf:"bytes,1,opt,name=challenge" json:"challenge,omitempty"`
	// Response fields
	Response         *AuthResponse `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	Error            *AuthError    `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *DeviceAuthMessage) Reset()                    { *m = DeviceAuthMessage{} }
func (m *DeviceAuthMessage) String() string            { return proto.CompactTextString(m) }
func (*DeviceAuthMessage) ProtoMessage()               {}
func (*DeviceAuthMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeviceAuthMessage) GetChallenge() *AuthChallenge {
	if m != nil {
		return m.Challenge
	}
	return nil
}

func (m *DeviceAuthMessage) GetResponse() *AuthResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *DeviceAuthMessage) GetError() *AuthError {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*CastMessage)(nil), "extensions.api.cast_channel.CastMessage")
	proto.RegisterType((*AuthChallenge)(nil), "extensions.api.cast_channel.AuthChallenge")
	proto.RegisterType((*AuthResponse)(nil), "extensions.api.cast_channel.AuthResponse")
	proto.RegisterType((*AuthError)(nil), "extensions.api.cast_channel.AuthError")
	proto.RegisterType((*DeviceAuthMessage)(nil), "extensions.api.cast_channel.DeviceAuthMessage")
	proto.RegisterEnum("extensions.api.cast_channel.SignatureAlgorithm", SignatureAlgorithm_name, SignatureAlgorithm_value)
	proto.RegisterEnum("extensions.api.cast_channel.CastMessage_ProtocolVersion", CastMessage_ProtocolVersion_name, CastMessage_ProtocolVersion_value)
	proto.RegisterEnum("extensions.api.cast_channel.CastMessage_PayloadType", CastMessage_PayloadType_name, CastMessage_PayloadType_value)
	proto.RegisterEnum("extensions.api.cast_channel.AuthError_ErrorType", AuthError_ErrorType_name, AuthError_ErrorType_value)
}

var fileDescriptor0 = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x53, 0xd1, 0x4e, 0xd4, 0x4c,
	0x18, 0xa5, 0x5d, 0xe0, 0xff, 0xf7, 0xdb, 0x75, 0x29, 0x83, 0xd1, 0x26, 0x5e, 0xb0, 0xd6, 0x68,
	0x94, 0x8b, 0x0a, 0x44, 0x12, 0xa2, 0xf1, 0x62, 0x58, 0x2a, 0x14, 0x97, 0xb2, 0xe9, 0x14, 0x12,
	0x2f, 0xcc, 0x64, 0xec, 0x0e, 0xec, 0x24, 0xa5, 0xdd, 0x4c, 0x67, 0x89, 0x3c, 0x8f, 0x8f, 0x62,
	0xe2, 0x8b, 0xf8, 0x22, 0x4e, 0x5b, 0x0a, 0x2b, 0xc6, 0x85, 0x0b, 0x6f, 0x36, 0xdd, 0x93, 0xef,
	0x9c, 0xf9, 0xce, 0x39, 0x33, 0x80, 0x62, 0x96, 0x2b, 0x1a, 0x8f, 0x58, 0x9a, 0xf2, 0xc4, 0x1d,
	0xcb, 0x4c, 0x65, 0xe8, 0x09, 0xff, 0xaa, 0x78, 0x9a, 0x8b, 0x2c, 0xcd, 0x5d, 0x36, 0x16, 0xee,
	0xf4, 0x88, 0xf3, 0xd3, 0x84, 0x56, 0x4f, 0x03, 0x87, 0x3c, 0xcf, 0xd9, 0x19, 0x47, 0x21, 0x58,
	0x25, 0x2b, 0xce, 0x12, 0x7a, 0xc1, 0x65, 0xc1, 0xb2, 0x8d, 0xae, 0xf9, 0xb2, 0xb3, 0xb9, 0xed,
	0xce, 0xd0, 0x71, 0xa7, 0x34, 0xdc, 0xc1, 0x95, 0xc0, 0x49, 0xc5, 0x47, 0xcb, 0xd0, 0xcc, 0xb3,
	0x89, 0x8c, 0x39, 0x15, 0x43, 0xdb, 0xd4, 0x62, 0x4d, 0xf4, 0x08, 0x3a, 0x43, 0x9e, 0x2b, 0x91,
	0x32, 0xa5, 0x27, 0x0a, 0xbc, 0x51, 0xe2, 0x7a, 0x34, 0x65, 0xe7, 0x3c, 0x1f, 0xb3, 0x98, 0xdb,
	0xf3, 0x25, 0x74, 0x00, 0xed, 0x31, 0xbb, 0x4c, 0x32, 0x36, 0xa4, 0xea, 0x72, 0xcc, 0xed, 0x85,
	0x72, 0x9b, 0x37, 0xf7, 0xdf, 0xa6, 0x22, 0x47, 0x9a, 0x8b, 0x1e, 0xde, 0x68, 0x4d, 0xd4, 0xe9,
	0xb6, 0xbd, 0xd8, 0x35, 0xaa, 0x65, 0x6a, 0xf4, 0x8b, 0xde, 0x48, 0x5e, 0xda, 0xff, 0x69, 0xbc,
	0xed, 0x3c, 0x85, 0xa5, 0xdb, 0x56, 0x3a, 0x00, 0x3d, 0x4c, 0xa2, 0x93, 0x4d, 0xba, 0x41, 0xd7,
	0xad, 0x39, 0xe7, 0x39, 0xb4, 0xa6, 0xf5, 0x01, 0x16, 0x49, 0x14, 0xfa, 0xc1, 0x9e, 0x35, 0x57,
	0x7c, 0xef, 0xf8, 0x01, 0x0e, 0x3f, 0x59, 0x86, 0x93, 0xc2, 0x03, 0x3c, 0x51, 0xa3, 0xde, 0x88,
	0x25, 0x09, 0x4f, 0x75, 0xcc, 0x9f, 0x61, 0x25, 0x17, 0x67, 0xda, 0xfd, 0x44, 0x72, 0xca, 0x92,
	0xb3, 0x4c, 0x0a, 0x35, 0x3a, 0xd7, 0x49, 0x1b, 0xda, 0xdb, 0xeb, 0x99, 0xde, 0x48, 0xcd, 0xc3,
	0x35, 0xed, 0xed, 0x52, 0x48, 0x30, 0x21, 0x98, 0x0e, 0x3e, 0xf6, 0xc8, 0xc6, 0xc5, 0xc6, 0x96,
	0xf3, 0xdd, 0x80, 0x76, 0x71, 0x60, 0xa8, 0x93, 0xd4, 0x22, 0xbc, 0xac, 0xa0, 0xe6, 0x95, 0x7d,
	0xb6, 0xd1, 0x2a, 0x3c, 0x8e, 0x13, 0xc1, 0x53, 0x45, 0x99, 0x9e, 0xa4, 0x31, 0x97, 0x4a, 0x9c,
	0x8a, 0x98, 0x29, 0x5e, 0x76, 0xd4, 0x46, 0x5d, 0xb0, 0x45, 0xaa, 0xb8, 0x3c, 0xe7, 0x43, 0xa1,
	0xd1, 0xdf, 0x26, 0x1a, 0xdd, 0x86, 0x9e, 0xf8, 0x8b, 0x8b, 0xf9, 0x7f, 0xe4, 0xe2, 0x9b, 0x01,
	0xcd, 0xc2, 0x85, 0x27, 0x65, 0x26, 0xd1, 0x2e, 0x00, 0x2f, 0x3e, 0xaa, 0x5b, 0x50, 0xdd, 0xc9,
	0xf5, 0x99, 0x67, 0x5c, 0x73, 0xdd, 0xf2, 0xb7, 0x68, 0xc8, 0x19, 0x40, 0xf3, 0xfa, 0x0f, 0x42,
	0xd0, 0xf1, 0x83, 0xc8, 0x0b, 0x03, 0xdc, 0xa7, 0x5e, 0x18, 0x1e, 0x85, 0x55, 0x6d, 0xc1, 0x11,
	0x8d, 0xfa, 0xc4, 0x32, 0xd0, 0x33, 0x58, 0x25, 0xfe, 0x5e, 0x80, 0xa3, 0xe3, 0xd0, 0xa3, 0xb8,
	0xbf, 0x77, 0x14, 0xfa, 0xd1, 0xfe, 0x21, 0x3d, 0x0e, 0xf0, 0x09, 0xf6, 0xfb, 0x78, 0xa7, 0xef,
	0x59, 0xa6, 0xf3, 0xc3, 0x80, 0xe5, 0x5d, 0x7e, 0x21, 0x62, 0x5e, 0x9c, 0x57, 0xbf, 0xa3, 0xf7,
	0xd0, 0x8c, 0xeb, 0xb6, 0xcb, 0x5a, 0x5b, 0x9b, 0x6b, 0x77, 0x2e, 0x7b, 0x73, 0x3f, 0xde, 0xc1,
	0xff, 0xf2, 0xaa, 0x3b, 0xdd, 0x46, 0xc1, 0x7e, 0x75, 0x27, 0xfb, 0xba, 0xec, 0x2d, 0x58, 0x28,
	0x93, 0xd2, 0x2d, 0x15, 0xcc, 0x17, 0xf7, 0x0b, 0x69, 0xed, 0x00, 0xd0, 0x9f, 0xad, 0xa0, 0x25,
	0x68, 0x1d, 0x07, 0x64, 0xe0, 0xf5, 0xfc, 0x0f, 0xbe, 0xb7, 0xab, 0x03, 0x5a, 0x81, 0xdb, 0x45,
	0xe9, 0xa4, 0xf4, 0xbb, 0xa8, 0x41, 0x42, 0x2c, 0x73, 0xc7, 0xdc, 0x6f, 0xfc, 0x0a, 0x00, 0x00,
	0xff, 0xff, 0x3e, 0xf5, 0x71, 0xad, 0x8c, 0x04, 0x00, 0x00,
}
